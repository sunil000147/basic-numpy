{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "7a70b365-d05c-4540-9add-b1abd03d317c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f3366efb-f843-467d-9c65-7824ccad38fa",
   "metadata": {},
   "outputs": [],
   "source": [
    "l=['1', '2', '3', '4', '5' ]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "69d2d76f-f525-436f-bf76-1623e75716c5",
   "metadata": {},
   "outputs": [],
   "source": [
    "array_list=np.array(l)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c0daa01d-bd54-4123-8b1c-880192d22ce7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['1', '2', '3', '4', '5'], dtype='<U1')"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "array_list"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b6a0c1f-e7b3-49fe-b638-4f89b9289fee",
   "metadata": {},
   "source": [
    "Q1. Is there any difference in the data type of variables list_ and array_list? If there is then write a code \n",
    "to print the data types of both the variables."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "5ec7f6de-d5e6-4ed2-9857-f1e01c390063",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " the data type of the list is: <class 'list'>\n",
      " the data type of the array_list is : <class 'numpy.ndarray'>\n"
     ]
    }
   ],
   "source": [
    "# print data type of the variables.\n",
    "\n",
    "print(\" the data type of the list is:\" ,  type(l))\n",
    "print(\" the data type of the array_list is :\" ,  type(array_list))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c01e091a-9ad6-4ed3-9864-d26d3393d194",
   "metadata": {},
   "source": [
    "Q2. Write a code to print the data type of each and every element of both the variables list_ and \n",
    "arra_list."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "4333c69b-65fa-4f2c-aedd-beed635e8909",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " the data type of each element is : <class 'str'>\n",
      " the data type of each element is : <class 'str'>\n",
      " the data type of each element is : <class 'str'>\n",
      " the data type of each element is : <class 'str'>\n",
      " the data type of each element is : <class 'str'>\n"
     ]
    }
   ],
   "source": [
    "\n",
    "# print the data type of each element in the list.\n",
    "for element in l:\n",
    "    print(\" the data type of each element is :\", type(element))\n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "7324fcd3-0bbd-47c1-871e-0a3d2551db91",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " the data type of each element in array_list is : <class 'numpy.str_'>\n",
      " the data type of each element in array_list is : <class 'numpy.str_'>\n",
      " the data type of each element in array_list is : <class 'numpy.str_'>\n",
      " the data type of each element in array_list is : <class 'numpy.str_'>\n",
      " the data type of each element in array_list is : <class 'numpy.str_'>\n"
     ]
    }
   ],
   "source": [
    "# print the data type of each element in the array_list.\n",
    "\n",
    "for element in array_list:\n",
    "    print(\" the data type of each element in array_list is :\" , type(element))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2dcde598-e60c-4000-9521-9271ca4e7fd3",
   "metadata": {},
   "source": [
    " import numpy as np\n",
    "\n",
    "num_list = [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] ]\n",
    "\n",
    "num_array = np.array(object = num_list)\n",
    "Q4. Write a code to find the following characteristics of variable, num_array:\n",
    "\n",
    "(i)\t shape\n",
    "\n",
    "(ii) siz"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "68edde80-03a6-4d2e-9796-6a8459b8c6d0",
   "metadata": {},
   "outputs": [],
   "source": [
    "num_list = [[1,2.3], [4,5,6]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "400138cb-2838-465f-bf3e-0557ec7dea7b",
   "metadata": {},
   "outputs": [],
   "source": [
    "num_array = np.array([[1,2,3] , [4,5,6]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "a37e4440-e923-428a-86fc-d99a1699f526",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1, 2, 3],\n",
       "       [4, 5, 6]])"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "num_array"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "8deafc7e-b856-45cb-b834-4bb6fb6fc1c7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "the shape of num_array is :  (2, 3)\n"
     ]
    }
   ],
   "source": [
    "# find the shape of num_array.\n",
    "shape = np.shape(num_array)\n",
    "print(\"the shape of num_array is : \" , shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "919379de-f579-4e95-9c13-e015b05b145a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "the size of num_array is :  6\n"
     ]
    }
   ],
   "source": [
    "#  find the size of num_array.\n",
    "\n",
    "size = np.size(num_array)\n",
    "print( \"the size of num_array is : \" , size)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0fc0a881-50ef-4f85-bcd7-63f2e5621eee",
   "metadata": {},
   "source": [
    "Q5. Write a code to create numpy array of 3*3 matrix containing zeros only, using a numpy array \n",
    "creation function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "7101e3d7-3cc2-463f-a266-d0a8c9d6f204",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " the numpy array 3*3 matrix containing zeros is :  [[0. 0. 0.]\n",
      " [0. 0. 0.]\n",
      " [0. 0. 0.]]\n"
     ]
    }
   ],
   "source": [
    "zeros_array = np.zeros((3,3))\n",
    "print( \" the numpy array 3*3 matrix containing zeros is : \" , zeros_array)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2fe75054-086f-4955-8c45-36c38e832acd",
   "metadata": {},
   "source": [
    "Q6. Create an identity matrix of shape (5,5) using numpy functions?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "2f925c9e-0393-4436-8e9a-f8c15f1edc2c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " identity matrix of shape (5,5) is :  [[1. 0. 0. 0. 0.]\n",
      " [0. 1. 0. 0. 0.]\n",
      " [0. 0. 1. 0. 0.]\n",
      " [0. 0. 0. 1. 0.]\n",
      " [0. 0. 0. 0. 1.]]\n"
     ]
    }
   ],
   "source": [
    "identity_matrix = np.eye(5,5)\n",
    "print(\" identity matrix of shape (5,5) is : \" , identity_matrix)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b30ad048-871c-4bb0-98b2-54d80c6aa8a6",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
